name: Application Test and Release Workflow

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mvp_api_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 24.0.1
          elixir-version: 1.12.1
          experimental-otp: true
      - run: mix deps.get
      - run: mix test

  release:
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    runs-on: ubuntu-latest

    needs: test

    steps:
      - uses: actions/checkout@v2
      - run: |+
          cat >~/.netrc <<EOF
          machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
      # - run: heroku git:remote -a $(basename ${{ github.repository}} )
      - run: heroku git:remote -a mvp-api-jc
      - run: git fetch --all --unshallow
      - run: git push heroku HEAD:refs/heads/main
      - run: heroku run "POOL_SIZE=2 mix ecto.migrate"
